// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           BigInt    @id @default(autoincrement())
  firstName    String    @db.VarChar(50)
  middleName   String?   @db.VarChar(50)
  lastName     String    @db.VarChar(50)
  mobile       String    @db.VarChar(15)
  email        String    @db.VarChar(50)
  passwordHash String    @db.VarChar(32)
  registeredAt DateTime
  lastLogin    DateTime?
  intro        String?   @db.TinyText
  profile      String?   @db.Text
  posts        Post[]
}

model Tag {
  id        BigInt    @id @default(autoincrement())
  title     String    @db.VarChar(75)
  metaTitle String    @db.VarChar(100)
  slug      String    @db.VarChar(100)
  content   String    @db.Text
  postTags  PostTag[]
}

model PostTag {
  postid BigInt
  tagId  BigInt
  post   Post   @relation(fields: [postid], references: [id])
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@id([postid, tagId])
}

model Post {
  id             BigInt         @id @default(autoincrement())
  authorId       BigInt
  parentId       BigInt?
  title          String         @db.VarChar(75)
  metaTitle      String         @db.VarChar(100)
  slug           String         @db.VarChar(100)
  summary        String?        @db.TinyText
  published      Boolean
  createdAt      DateTime
  updatedAt      DateTime?
  publishedAt    DateTime?
  content        String         @db.Text
  author         User           @relation(fields: [authorId], references: [id])
  parentPost     Post?          @relation("PostsToPosts", fields: [parentId], references: [id])
  childPosts     Post[]         @relation("PostsToPosts")
  postTags       PostTag[]
  postMetas      PostMeta[]
  postCategories PostCategory[]
  comments       Comment[]
}

model Category {
  id              BigInt         @id @default(autoincrement())
  parentId        BigInt?
  title           String         @db.VarChar(75)
  metaTitle       String         @db.VarChar(100)
  slug            String         @db.VarChar(100)
  content         String         @db.Text
  parentCategory  Category?      @relation("CategoriesToCategories", fields: [parentId], references: [id])
  childCategories Category[]     @relation("CategoriesToCategories")
  postCategories  PostCategory[]
}

model PostCategory {
  postid     BigInt
  categoryId BigInt
  post       Post     @relation(fields: [postid], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postid, categoryId])
}

model Comment {
  id            BigInt    @id @default(autoincrement())
  postId        BigInt
  parentId      BigInt?
  title         String    @db.VarChar(100)
  published     Boolean
  createdAt     DateTime
  publishedAt   DateTime?
  content       String    @db.Text
  post          Post      @relation(fields: [postId], references: [id])
  parentComment Comment?  @relation("CommentsToComments", fields: [parentId], references: [id])
  childComments Comment[] @relation("CommentsToComments")
}

model PostMeta {
  id      BigInt @id @default(autoincrement())
  postId  BigInt
  key     String @db.VarChar(50)
  content String @db.Text
  post    Post   @relation(fields: [postId], references: [id])
}
